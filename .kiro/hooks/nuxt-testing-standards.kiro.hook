{
  "enabled": true,
  "name": "Nuxt Testing Standards",
  "description": "Follow best practices for testing Nuxt applications using Vitest and Vue Test Utils",
  "version": "1",
  "when": {
    "type": "fileEdited",
    "patterns": [
      "**/*.spec.ts",
      "**/*.spec.js",
      "**/*.test.ts",
      "**/*.test.js"
    ]
  },
  "then": {
    "type": "askAgent",
    "prompt": "Review this Nuxt test file and ensure it follows best practices:\n\n## Requirements to Check:\n- Use proper test organization with describe/it blocks\n- Implement proper component mounting with createTestingPinia\n- Use data-test attributes for selectors instead of class/id selectors\n- Handle async operations properly with await\n- Implement proper mocking with vi.fn and vi.mock\n- Use meaningful assertions that test behavior, not implementation\n- Clean up after tests with beforeEach/afterEach\n- Test component contracts and user interactions\n- Handle edge cases like loading and error states\n- Write descriptive test names that explain what is being tested\n\n## Common Issues to Fix:\n- Missing describe blocks for test organization\n- Testing implementation details instead of user behavior\n- Not using data-test attributes for element selection\n- Improper async/await handling\n- Missing cleanup between tests\n- Hardcoded timeouts instead of proper async handling\n- Testing multiple concerns in a single test\n- Missing error state testing\n- Not mocking external dependencies properly\n\nProvide specific feedback on what needs to be improved and show corrected examples following the Nuxt testing patterns with Vitest, Vue Test Utils, and Pinia testing utilities."
  }
}
